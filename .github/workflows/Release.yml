name: Release

# on:
#   push:
#     branches:
#       - component-testing-pipeline-feature

#     # Publish `v1.2.3` tags as releases.
#     tags:
#       - v*
# env:
#   # TODO: Change variable to your image's name.
#   IMAGE_NAME: demo

# jobs:
#   test:
#     runs-on: ubuntu-latest
#     strategy: 
#       matrix:
#         testtype: ['ComponentTest', 'Test']
#         services: ['DemoFrontend', 'Demo']
#     name: Running ${{ matrix.services }} ${{ matrix.testtype }}s
#     steps:
#     - uses: actions/checkout@v2
#     - name: Setup dotnet install
#       uses: actions/setup-dotnet@v1
#       with: 
#         dotnet-version: '3.1.100'

#     - name: Run tests
#       run: dotnet test ${{ matrix.services }}/${{ matrix.services }}.Api.${{matrix.testtype}}/${{ matrix.services }}.Api.${{matrix.testtype}}.csproj
# name: Release

on:
  push:
    branches:
      - component-testing-pipeline-feature

    # Publish `v1.2.3` tags as releases.
    tags:
      - v*

env:
  # TODO: Change variable to your image's name.
  IMAGE_NAME: demo

jobs:
  sonarqube-analyze:
    runs-on: [linux, self-hosted]
    name: Analyzing code
    env: 
      SONAR_TOKEN: ${{ secrets.SONAR_DEMO_API_TOKEN }}
      SONAR_HOST: ${{ secrets.SONAR_HOST }}
    steps:
      - uses: actions/checkout@v2
      - name: Setup dotnet install
        uses: actions/setup-dotnet@v1
        with: 
          dotnet-version: '3.1.100'
      - name: Install SonarCloud scannerr
        run: |
          dotnet tool install --global dotnet-sonarscanner --version 4.8.0
          echo "::set-env name=PATH::${PATH}:${HOME}/.dotnet/tools"
      - name: Attaching SonarQube to dotnet
        run: dotnet sonarscanner begin /k:"mdlo-demo-api" /d:sonar.host.url="http://145.97.16.187:9000/" /d:sonar.login="34eaf482791468090377d16567ad0cad2533577d"
      - name: Running tests, building solution
        run: dotnet build Demo/Demo.sln
      - name: Finishing SonarQube scan
        run: dotnet sonarscanner end 
        
        
#   test:
#     runs-on: ubuntu-latest
#     strategy: 
#       matrix:
#         testtype: ['ComponentTest', 'Test']
#         services: ['DemoFrontend', 'Demo']
#     name: Running ${{ matrix.services }} ${{ matrix.testtype }}s
#     steps:
#     - uses: actions/checkout@v2
#     - name: Setup dotnet install
#       uses: actions/setup-dotnet@v1
#       with: 
#         dotnet-version: '3.1.100'

#     - name: Run tests
#       run: dotnet test ${{ matrix.services }}/${{ matrix.services }}.Api.${{matrix.testtype}}/${{ matrix.services }}.Api.${{matrix.testtype}}.csproj
