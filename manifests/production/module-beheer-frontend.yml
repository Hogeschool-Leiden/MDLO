apiVersion: v1
kind: Secret
metadata:
  name: module-beheer-frontend-secret
  namespace: production
data:
  connectionString: VXNlciBJRD1wb3N0Z3JlcztQYXNzd29yZD1jOEx5WmZzYWNwdnU7SG9zdD1wb3N0Z3JlcztQb3J0PTU0MzI7RGF0YWJhc2U9RnJvbnRlbmRTZXJ2aWNlU3RhZ2luRGI7
  url: YW1xcDovL3JhYmJpdG1xLWFkbWluOm5tY25qa2xoYWk3YTNramhramxsamVhaGZAcmFiYml0bXE=
  exchange: TURMTw==
  queue: Q29tcGV0ZW50aWVBcHA=
  loglevel: SU5GT1JNQVRJT04=
---
apiVersion: v1
kind: Service
metadata:
  name: module-beheer-frontend
  namespace: production
spec:
  ports:
    - port: 80
  selector:
    app: module-beheer-frontend
---
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: module-beheer-frontend
  namespace: production
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: module-beheer-frontend
    spec:
      containers:
        - env:
            - name: BROKER_CONNECTION_STRING
              valueFrom:
                secretKeyRef:
                  name: module-beheer-frontend-secret
                  key: url
            - name: BROKER_EXCHANGE_NAME
              valueFrom:
                secretKeyRef:
                  name: module-beheer-frontend-secret
                  key: exchange
            - name: DB_CONNECTION_STRING
              valueFrom:
                secretKeyRef:
                  name: module-beheer-frontend-secret
                  key: connectionString
            - name: BROKER_QUEUE_NAME
              valueFrom:
                secretKeyRef:
                  name: module-beheer-frontend-secret
                  key: queue
            - name: LOG_LEVEL
              valueFrom:
                secretKeyRef:
                  name: module-beheer-frontend-secret
                  key: loglevel
          name: frontend-service
          image: hsleidenmdlo.azurecr.io/module-beheer-frontend
          imagePullPolicy: Always
          ports:
            - containerPort: 80
          resources:
            limits:
              cpu: 250m
              memory: 256Mi
            requests:
              cpu: 50m
              memory: 50Mi
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: module-beheer-frontend-ingress
  namespace: production
  annotations:
    nginx.ingress.kubernetes.io/use-regex: "true"
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/proxy-buffering: "on"
    nginx.ingress.kubernetes.io/proxy-buffer-size: "128k"
    nginx.ingress.kubernetes.io/proxy-buffers-number: "4"
    certmanager.k8s.io/issuer: "letsencrypt-production"
spec:
  rules:
    - host: modules.production.mdlo.nl
      http:
        paths:
          - path: /(.*)
            backend:
              serviceName: module-beheer-frontend
              servicePort: 80
